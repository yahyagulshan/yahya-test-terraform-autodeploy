name: Terraform Plan

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main    

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  plan:
    name: Terraform Plan ${{ github.ref }}
    runs-on: ubuntu-latest

    env:
      TF_VERSION: ${{ secrets.TF_VERSION }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      TF_PLAN_CACHE: terraform.tfplan
      AWS_ROLE: ${{ secrets.AWS_ROLE }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3.5.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          aws-region: us-east-1

      - name: Debug Info
        run: |
          echo "Branch: ${{ github.ref }}"
          echo "AWS_ACCOUNT: ${{ env.AWS_ACCOUNT }}"
          echo "AWS_ROLE: ${{ env.AWS_ROLE }}"
          echo "Terraform Version: ${{ env.TF_VERSION }}"

      - name: Terraform Format
        run: terraform fmt -recursive

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false -out=${{ env.TF_PLAN_CACHE }}
        continue-on-error: true

      - name: Capture Plan Output
        id: capture_output
        run: |
          if [ -f "${TF_PLAN_CACHE}" ]; then
            terraform show -no-color ${TF_PLAN_CACHE} > plan_output.txt
            cat plan_output.txt
          else
            echo "Plan cache not found!"
            exit 1
          fi

      - name: Check Plan Output
        run: ls -la plan_output.txt

      - name: Post Plan Comment
        id: comment
        uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.G_TOKEN }}
        with:
          script: |
            const fs = require('fs');
            try {
              const planContent = fs.readFileSync('plan_output.txt', 'utf8');
              const output = `#### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
              #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

              <details><summary>Show Plan</summary>

              \`\`\`${planContent}\`\`\`

              </details>

              *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              });
            } catch (err) {
              console.error('Error reading plan output file:', err);
              throw err;
            }

