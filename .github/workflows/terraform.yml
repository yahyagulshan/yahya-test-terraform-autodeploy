name: Terraform CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
      - develop
  push:
    branches:
      - main
      - develop

jobs:
  terraform:
    name: Terraform Plan
    runs-on: ubuntu-latest

    permissions:
      actions: read
      contents: read
      pull-requests: write
      issues: write

    steps:
      # Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.TF_BACKEND_REGION }}

      # Initialize Terraform
      - name: Terraform Init
        run: terraform init 
              # -backend-config="bucket=${{ secrets.TF_BACKEND_BUCKET }}" \
              # -backend-config="key=${{ secrets.TF_BACKEND_KEY }}" \
              # -backend-config="region=${{ secrets.TF_BACKEND_REGION }}"

      # Terraform Plan
      - name: Terraform Plan
        id: tf_plan
        run: terraform plan -out=tfplan

      # Upload the Terraform plan file for the next workflow (apply)
      - name: Upload Plan
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: tfplan

  manual_approval:
    name: Manual Approval
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Await Approval
        run: echo "Waiting for manual approval..."

      # Manual approval placeholder - you can document this step for approvers
      - name: Approval Step
        run: exit 1
        if: "! github.event.pull_request.merged"

  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: [terraform, manual_approval]
    if: github.event_name == 'pull_request'
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Download the previously generated plan
      - name: Download Plan
        uses: actions/download-artifact@v3
        with:
          name: tfplan

      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      # Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.TF_BACKEND_REGION }}

      # Apply Terraform
      - name: Terraform Apply
        run: terraform apply "tfplan"
